{"version":3,"sources":["Pokecard.js","Pokemax.js","Pokegame.js","App.js","reportWebVitals.js","index.js"],"names":["Pokecard","number","imgSrc","this","props","id","slice","className","name","src","alt","type","exp","Component","Pokemax","title","winner","isWinner","pokemon","map","p","base_experience","Pokegame","hand1","hand2","length","randIdx","Math","floor","random","randPokemon","splice","push","exp1","reduce","exp2","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.899f83be.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './Pokecard.css'\r\n\r\nconst Poke_Api = `https://assets.pokemon.com/assets/cms2/img/pokedex/detail/`\r\n\r\nlet padToThree = (number) => (number <= 999 ? `00${number}`.slice(-3) : number)\r\n\r\nclass Pokecard extends Component {\r\n  render() {\r\n    let imgSrc = `${Poke_Api}${padToThree(this.props.id)}.png`\r\n    return (\r\n      <div className='Pokecard'>\r\n        <h1 className='Pokecard-title'>{this.props.name}</h1>\r\n        <div className='Pokecard-image'>\r\n          <img src={imgSrc} alt={this.props.name} />\r\n        </div>\r\n\r\n        <div className='Pokecard-data'>Type: {this.props.type}</div>\r\n        <div className='Pokecard-data'>Exp: {this.props.exp}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Pokecard\r\n","import React, { Component } from 'react'\r\nimport Pokecard from './Pokecard'\r\nimport './Pokemax.css'\r\n\r\nclass Pokemax extends Component {\r\n  render() {\r\n    let title\r\n    let winner = this.props.isWinner\r\n    if (this.props.isWinner) {\r\n      title = <h1 className='Pokemax-winner'>Winner :)</h1>\r\n    } else {\r\n      title = <h1 className='Pokemax-loser'>Loser :(</h1>\r\n    }\r\n    return (\r\n      <div className='Pokemax'>\r\n        {title}\r\n        <h4>\r\n          Total experience:{' '}\r\n          <span className={winner ? 'Pokemax-winner' : 'Pokemax-loser'}>\r\n            {this.props.exp}\r\n          </span>\r\n        </h4>\r\n\r\n        <div className='Pokemax-cards'>\r\n          {this.props.pokemon.map((p) => (\r\n            <Pokecard\r\n              id={p.id}\r\n              name={p.name}\r\n              type={p.type}\r\n              exp={p.base_experience}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Pokemax\r\n","import React, { Component } from 'react'\r\nimport Pokemax from './Pokemax'\r\n\r\nclass Pokegame extends Component {\r\n  static defaultProps = {\r\n    pokemon: [\r\n      { id: 4, name: 'Charmander', type: 'fire', base_experience: 62 },\r\n      { id: 7, name: 'Squirtle', type: 'water', base_experience: 63 },\r\n      { id: 11, name: 'Metapod', type: 'bug', base_experience: 72 },\r\n      { id: 12, name: 'Butterfree', type: 'flying', base_experience: 178 },\r\n      { id: 25, name: 'Pikachu', type: 'electric', base_experience: 112 },\r\n      { id: 39, name: 'Jigglypuff', type: 'normal', base_experience: 95 },\r\n      { id: 94, name: 'Gengar', type: 'poison', base_experience: 225 },\r\n      { id: 133, name: 'Eevee', type: 'normal', base_experience: 65 },\r\n    ],\r\n  }\r\n  render() {\r\n    let hand1 = []\r\n    let hand2 = [...this.props.pokemon]\r\n    while (hand1.length < hand2.length) {\r\n      let randIdx = Math.floor(Math.random() * hand2.length)\r\n      let randPokemon = hand2.splice(randIdx, 1)[0]\r\n      hand1.push(randPokemon)\r\n    }\r\n    let exp1 = hand1.reduce((exp, pokemon) => exp + pokemon.base_experience, 0)\r\n    let exp2 = hand2.reduce((exp, pokemon) => exp + pokemon.base_experience, 0)\r\n    return (\r\n      <div>\r\n        <Pokemax pokemon={hand1} exp={exp1} isWinner={exp1 > exp2} />\r\n        <Pokemax pokemon={hand2} exp={exp2} isWinner={exp2 > exp1} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Pokegame\r\n","import React, { Component } from 'react'\nimport Pokegame from './Pokegame'\nimport './App.css'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <Pokegame />\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}